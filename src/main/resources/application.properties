spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver

spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect


# PLEASE DO NOT REMOVE THE H2 DATA BASE DETAILS BELPOW !!

#Connection to local Environment (Fabrice)
sponsor.datasource.url=jdbc:postgresql://localhost:5432/sponsor
sponsor.datasource.username=sponsoruser
sponsor.datasource.password=password
sponsor.datasource.driverClassName=org.postgresql.Driver

#Conneection pool for Postgresql
sponsor.datasource.maxActive=10
sponsor.datasource.maxIdle=5
sponsor.datasource.minIdle=2
sponsor.datasource.initialSize=5
sponsor.datasource.removeAbandoned=true


# Keep the connection alive if idle for a long time (needed in production)
sponsor.source.testWhileIdle=true
sponsor.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=create

#  Spring autodetect the different SQL Dialects of each datasource
spring.jpa.database=default

# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# JPA Propertiess
# Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.

spring.jpa.open-in-view=true


# Swagger UI documentation.
springdoc.swagger-ui.path=/swagger-ui-custom.html

# Sort API by method orders
springdoc.swagger-ui.operationsSorter=method

